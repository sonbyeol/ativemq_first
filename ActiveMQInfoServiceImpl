import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.ArrayList;
import java.util.List;

@Service
public class ActiveMQInfoServiceImpl implements ActiveMQInfoService {

    @Autowired
    private ActiveMQInfoRepository activeMQInfoRepository;

    @Override
    public List<ActiveMQInfo> getAllActiveMQInfo() {
        List<ActiveMQInfo> activeMQInfos = new ArrayList<>();

        // Jolokia를 사용하여 ActiveMQ Artemis의 컨슈머 수와 큐의 정보를 가져오는 로직
        RestTemplate restTemplate = new RestTemplate();

        // ActiveMQ Artemis의 Jolokia URL
        String jolokiaUrl = "http://localhost:8161/jolokia/";

        // 컨슈머 수 가져오기
        String consumerCountUrl = jolokiaUrl + "read/org.apache.activemq.artemis:module=Core,type=Server,attribute=ConsumerCount";
        String consumerCount = restTemplate.getForObject(consumerCountUrl, String.class);

        // 큐의 정보 가져오기
        String queueName = "your-queue-name"; // 큐 이름 설정
        String queueInfoUrl = jolokiaUrl + "read/org.apache.activemq.artemis:broker=\"localhost\",component=addresses,address=\"" + queueName + "\",subcomponent=queues,routing-type=\"anycast\",queue=\"" + queueName + "\",attribute=MessageCount";
        String queueCount = restTemplate.getForObject(queueInfoUrl, String.class);

        // 가져온 정보를 DTO에 저장
        ActiveMQInfo activeMQInfo = new ActiveMQInfo();
        activeMQInfo.setConsumerCount(consumerCount);
        activeMQInfo.setQueueName(queueName);
        activeMQInfo.setQueueUrl(queueInfoUrl);

        // DTO를 리스트에 추가
        activeMQInfos.add(activeMQInfo);

        // DB에 저장 (예시)
        activeMQInfoRepository.save(activeMQInfo);

        return activeMQInfos;
    }
}
